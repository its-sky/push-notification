{"ast":null,"code":"import { messaging } from './firebase-config';\nimport { getToken, onMessage } from 'firebase/messaging';\nconst VAPID_KEY = \"BCuNECS1bMHcO-sXaCGh5z0-FYBHSHR9kUsv271XsQyzCtZofH2ui-pjGb6bWSuaKgkhgNj0xpHhuj2cFShAK9I\";\n\n/**\n * Request FCM Device Token\n * @returns {Promise<string|null>} The FCM token or null if permission denied\n */\nexport const requestFcmToken = async () => {\n  try {\n    const permission = Notification.permission;\n    if (permission == 'default') {\n      await Notification.requestPermission();\n    }\n    if (permission != 'granted') {\n      console.error('Notification permission not granted');\n      return null;\n    }\n    const token = await getToken(messaging, {\n      vapidKey: VAPID_KEY\n    });\n    console.log('FCM Device Token:', token);\n    return token;\n  } catch (error) {\n    console.error('Failed to get FCM Token:', error);\n    return null;\n  }\n};\nexport const listenForMessages = callback => {\n  onMessage(messaging, payload => {\n    console.log('Message 도착:', payload);\n    if (callback) {\n      callback(payload);\n    }\n  });\n};","map":{"version":3,"names":["messaging","getToken","onMessage","VAPID_KEY","requestFcmToken","permission","Notification","requestPermission","console","error","token","vapidKey","log","listenForMessages","callback","payload"],"sources":["/Users/sinmincheol/study/push-notification/web/src/fcm.js"],"sourcesContent":["import { messaging } from './firebase-config'\nimport { getToken, onMessage } from 'firebase/messaging'\n\nconst VAPID_KEY = \"BCuNECS1bMHcO-sXaCGh5z0-FYBHSHR9kUsv271XsQyzCtZofH2ui-pjGb6bWSuaKgkhgNj0xpHhuj2cFShAK9I\";\n\n/**\n * Request FCM Device Token\n * @returns {Promise<string|null>} The FCM token or null if permission denied\n */\nexport const requestFcmToken = async () => {\n\ttry {\n\t\tconst permission = Notification.permission;\n\t\tif (permission == 'default') {\n\t\t\tawait Notification.requestPermission();\n\t\t}\n\n\t\tif (permission != 'granted') {\n\t\t\tconsole.error('Notification permission not granted');\n\t\t\treturn null;\n\t\t}\n\n\t\tconst token = await getToken(messaging, { vapidKey : VAPID_KEY });\n\t\tconsole.log('FCM Device Token:', token);\n\t\treturn token;\n\t} catch (error) {\n\t\tconsole.error('Failed to get FCM Token:', error);\n\t\treturn null;\n\t}\n};\n\nexport const listenForMessages = (callback) => {\n\tonMessage(messaging, (payload) => {\n\t\tconsole.log('Message 도착:', payload);\n\t\tif (callback) {\n\t\t\tcallback(payload);\n\t\t}\n\t})\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAExD,MAAMC,SAAS,GAAG,yFAAyF;;AAE3G;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACH,MAAMC,UAAU,GAAGC,YAAY,CAACD,UAAU;IAC1C,IAAIA,UAAU,IAAI,SAAS,EAAE;MAC5B,MAAMC,YAAY,CAACC,iBAAiB,CAAC,CAAC;IACvC;IAEA,IAAIF,UAAU,IAAI,SAAS,EAAE;MAC5BG,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;MACpD,OAAO,IAAI;IACZ;IAEA,MAAMC,KAAK,GAAG,MAAMT,QAAQ,CAACD,SAAS,EAAE;MAAEW,QAAQ,EAAGR;IAAU,CAAC,CAAC;IACjEK,OAAO,CAACI,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;IACvC,OAAOA,KAAK;EACb,CAAC,CAAC,OAAOD,KAAK,EAAE;IACfD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACZ;AACD,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAIC,QAAQ,IAAK;EAC9CZ,SAAS,CAACF,SAAS,EAAGe,OAAO,IAAK;IACjCP,OAAO,CAACI,GAAG,CAAC,aAAa,EAAEG,OAAO,CAAC;IACnC,IAAID,QAAQ,EAAE;MACbA,QAAQ,CAACC,OAAO,CAAC;IAClB;EACD,CAAC,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}