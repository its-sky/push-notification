{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from './assets/logo.png';\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"notification\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[1] || (_cache[1] = _createElementVNode(\"img\", {\n    alt: \"Vue logo\",\n    src: _imports_0\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"FCM 메시지 테스트\", -1 /* HOISTED */)), _createCommentVNode(\" 알림 표시 \"), $data.message ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.message.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.message.body), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","id","key","class","_createElementBlock","_Fragment","_createElementVNode","alt","src","_hoisted_1","_createCommentVNode","$data","message","_hoisted_2","_toDisplayString","title","body"],"sources":["/Users/sinmincheol/study/push-notification/web/src/App.vue"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n   <div id=\"app\">\n    <h1>FCM 메시지 테스트</h1>\n    <!-- 알림 표시 -->\n    <div v-if=\"message\" class=\"notification\">\n      <h2>{{ message.title }}</h2>\n      <p>{{ message.body }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { requestFcmToken, listenForMessages } from './fcm';\n\nexport default {\n  name: 'App',\n  mounted() {\n    this.getFcmToken();\n  },\n  methods: {\n    async getFcmToken() {\n      const token = await requestFcmToken();\n      if (token) {\n        console.log('토큰 발급 성공:', token);\n      } else {\n        console.log('토큰 발급 실패');\n      }\n\n      listenForMessages((payload) => {\n        const { title, body } = payload.notification || {};\n        this.message = { title, body };\n\n        setTimeout(() => {\n          this.message = null;\n        }, 5000);\n      });\n    },\n  },\n  data() {\n    return {\n      message: null,\n    };\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.notification {\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  background-color: #333;\n  color: white;\n  padding: 15px;\n  border-radius: 5px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n</style>\n"],"mappings":";OACsBA,UAAuB;;EACrCC,EAAE,EAAC;AAAK;;EAFhBC,GAAA;EAKwBC,KAAK,EAAC;;;uBAL9BC,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAA4C;IAAvCC,GAAG,EAAC,UAAU;IAACC,GAAuB,EAAvBR;+BACnBM,mBAAA,CAOK,OAPLG,UAOK,G,0BANJH,mBAAA,CAAoB,YAAhB,aAAW,sBACfI,mBAAA,WAAc,EACHC,KAAA,CAAAC,OAAO,I,cAAlBR,mBAAA,CAGM,OAHNS,UAGM,GAFJP,mBAAA,CAA4B,YAAAQ,gBAAA,CAArBH,KAAA,CAAAC,OAAO,CAACG,KAAK,kBACpBT,mBAAA,CAAyB,WAAAQ,gBAAA,CAAnBH,KAAA,CAAAC,OAAO,CAACI,IAAI,iB,KAPxBN,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}